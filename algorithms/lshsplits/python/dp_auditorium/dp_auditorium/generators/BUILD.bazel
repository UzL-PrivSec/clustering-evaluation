# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Differential Privacy Data Generators.

load("@dp_auditorium_py_pip_deps//:requirements.bzl", "requirement")

package(default_visibility = ["//visibility:public"])

licenses(["notice"])

py_library(
    name = "generators",
    srcs = ["__init__.py"],
    deps = [
        ":constant_dataset_generator",
        ":pipeline_dp_vizier_dataset_generator",
        ":vizier_dataset_generator",
    ],
)

py_library(
    name = "constant_dataset_generator",
    srcs = ["constant_dataset_generator.py"],
    deps = [
        "//dp_auditorium:interfaces",
        requirement("numpy"),
    ],
)

py_test(
    name = "constant_dataset_generator_test",
    srcs = ["constant_dataset_generator_test.py"],
    deps = [
        ":constant_dataset_generator",
        requirement("absl-py"),
        requirement("numpy"),
    ],
)

py_library(
    name = "vizier_dataset_generator",
    srcs = ["vizier_dataset_generator.py"],
    deps = [
        requirement("absl-py"),
        requirement("google-vizier"),
        requirement("numpy"),
        # Needed to fix strange dependency bugs in Vizier. Order is important!
        requirement("equinox"),
        requirement("flax"),
        requirement("googleapis-common-protos"),
        requirement("jax"),
        requirement("jaxlib"),
        requirement("pysqlite3"),
        "//dp_auditorium:interfaces",
        "//dp_auditorium/configs",
    ],
)

py_test(
    name = "vizier_dataset_generator_test",
    srcs = ["vizier_dataset_generator_test.py"],
    deps = [
        requirement("absl-py"),
        requirement("google-vizier"),
        requirement("numpy"),
        requirement("tensorflow"),
        # Needed to fix strange dependency bugs in Vizier. Order is important!
        requirement("equinox"),
        requirement("flax"),
        requirement("googleapis-common-protos"),
        requirement("jax"),
        requirement("jaxlib"),
        requirement("pysqlite3"),
        ":vizier_dataset_generator",
        "//dp_auditorium:interfaces",
    ],
)

py_library(
    name = "pipeline_dp_vizier_dataset_generator",
    srcs = ["pipeline_dp_vizier_dataset_generator.py"],
    deps = [
        requirement("numpy"),
        ":vizier_dataset_generator",
        "//dp_auditorium:interfaces",
        "//dp_auditorium/configs",
    ],
)

py_test(
    name = "pipeline_dp_vizier_dataset_generator_test",
    srcs = ["pipeline_dp_vizier_dataset_generator_test.py"],
    deps = [
        # Needed to fix strange dependency bugs in Vizier. Order is important!
        requirement("absl-py"),
        requirement("google-vizier"),
        requirement("tensorflow"),
        ":pipeline_dp_vizier_dataset_generator",
        "//dp_auditorium/configs",
    ],
)

py_library(
    name = "classification_dataset_generator",
    srcs = ["classification_dataset_generator.py"],
    deps = [
        requirement("google-vizier"),
        requirement("numpy"),
        ":vizier_dataset_generator",
        "//dp_auditorium:interfaces",
        "//dp_auditorium/configs",
    ],
)

py_test(
    name = "classification_dataset_generator_test",
    srcs = ["classification_dataset_generator_test.py"],
    deps = [
        requirement("absl-py"),
        requirement("google-vizier"),
        requirement("tensorflow"),
        ":classification_dataset_generator",
        "//dp_auditorium/configs",
    ],
)
